20220603 - tests with json and sqlite3.rows--------------------------------------------------------------
   elif request.method == 'POST':
        print("- - - - POST")
        db = get_db()
        error = None

        tempVar = {"id": "id12" + str(datetime.now()), "album": "homework", "artist": "daft punk", "date_added": str(datetime.now())}
        # json.dumps() function converts a Python object into a json string
        tempVar_Serialized = json.dumps(tempVar)
        #convert to json string before storing in db
        #https://stackoverflow.com/questions/20444155/python-proper-way-to-store-list-of-strings-in-sqlite3-or-mysql
        try:
            date_ = str(datetime.now())
            db.execute(
                'INSERT INTO NewWatchListTracks (id, trackList) VALUES (?,?)', (date_ + "id", tempVar_Serialized)
            )
            # db.execute(
            #     "INSERT INTO NewWatchListTracks (id, trackList) VALUES (?, ?)",
            #     (id, toStore),
            # )
            db.commit()
            print("added entry to DB!" )
        except db.IntegrityError:
            print("failed to add entry to DB!" )
            error = f"Id {id} is already registered."

        #show data
        data = db.execute('SELECT * FROM NewWatchListTracks').fetchall()
        print(data[0]["trackList"])
        print(data[0].keys())

        #convert list of JSON strings to list of dicts
        data_parsed= []
        for row in data:
            # print("type: " + str(type(row)))
            print(str(row))
            decode = json.loads(row[1])
            print(row[1])
            print(decode["album"])
            # data_parsed.append(json.loads(row))

        # print("parsed: " + data_parsed[9]["trackList"]["album"])

        flash(error)
        return render_template('watchlist.html', data = data)
        ----------------------------------------------------------------------------------------------------