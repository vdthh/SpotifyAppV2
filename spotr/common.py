########################################################################################
####################################### common.py ######################################
######################## functions used through whole project ##########################
########################################################################################



########################################################################################
######################################### IMPORTS ######################################
########################################################################################
import datetime
import os
import time
import random
########################################################################################



########################################################################################
######################################## VARIABLES #####################################
########################################################################################
ROOT_DIR = os.path.dirname(os.path.abspath(__file__)) #result --> E:\docs\phyton projects\SpotifyWebAppV2.0\spotr
CONFIG_PATH= os.path.join(ROOT_DIR, 'watchlist.py') #result --> E:\docs\phyton projects\SpotifyWebAppV2.0\spotr\common.py
########################################################################################



########################################################################################
######################################### LOGGING ######################################
########################################################################################
def logAction(msg):
    fl1 = open(ROOT_DIR + "\logs\log_event.txt", "a", encoding="utf-8")        #https://stackoverflow.com/questions/27092833/unicodeencodeerror-charmap-codec-cant-encode-characters
    timedetail = str(datetime.datetime.now())
    fl1.write('\n' + timedetail + " " + str(msg))
    fl1.close()
########################################################################################



########################################################################################
######################################## FUNCTIONS #####################################
########################################################################################
def waitForGivenTimeIns(secondsMin, secondsMax):
    '''--> Wait for given time in s, timespan between min and max'''
    time.sleep(random.uniform(secondsMin, secondsMax))
########################################################################################

